// src/commands/modera√ß√£o/postrules.js
const { EmbedBuilder, PermissionsBitField, ChannelType } = require('discord.js');

const ownerIdsString = process.env.OWNER_IDS || "SEU_ID_DE_PROPRIETARIO_AQUI_COMO_FALLBACK";
const ownerIds = ownerIdsString.split(',').map(id => id.trim()).filter(id => id);

module.exports = {
    name: 'postrules',
    aliases: ['regraservidor', 'enviarregras', 'mostrarregras'],
    description: 'Envia as regras do servidor para o canal atual ou um canal especificado.',
    category: 'modera√ß√£o',
    usage: '[#canal_opcional]',

    async execute({ client, message, args, prefix }) {
        if (
            !ownerIds.includes(message.author.id) &&
            !message.member.permissions.has(PermissionsBitField.Flags.Administrator) &&
            !message.member.permissions.has(PermissionsBitField.Flags.ManageGuild)
        ) {
            return message.reply({ content: "‚ùå Voc√™ n√£o tem permiss√£o para usar este comando." });
        }

        let targetChannel = message.channel;
        // ... (l√≥gica para pegar targetChannel dos args como antes) ...
        if (args.length > 0) {
            const channelMention = args[0];
            const channelIdMatch = channelMention.match(/^<#(\d+)>$/);
            if (channelIdMatch) {
                const foundChannel = message.guild.channels.cache.get(channelIdMatch[1]);
                if (foundChannel && foundChannel.type === ChannelType.GuildText && foundChannel.permissionsFor(client.user).has(PermissionsBitField.Flags.SendMessages) && foundChannel.permissionsFor(client.user).has(PermissionsBitField.Flags.EmbedLinks)) {
                    targetChannel = foundChannel;
                } else {
                    return message.reply({ content: "‚ùå Canal n√£o encontrado, n√£o √© um canal de texto, ou n√£o tenho permiss√£o para enviar embeds l√°." });
                }
            } else {
                return message.reply({ content: `Uso incorreto. Se for especificar um canal, mencione-o corretamente (ex: <#${message.channel.id}>).` });
            }
        }

        const introEmbed = new EmbedBuilder()
            .setColor('#FF69B4')
            .setTitle('üìú Regras do Servidor Bot Samy üìú')
            .setDescription("Ol√°! Para garantir que nossa comunidade seja um espa√ßo acolhedor, respeitoso e focado no suporte e desenvolvimento do Bot Samy, pedimos que todos sigam as regras abaixo. O descumprimento pode resultar em advert√™ncias, silenciamento, expuls√£o ou banimento.\n\n---");


        // Embed 1: Se√ß√µes 1 e 2
        const embed1 = new EmbedBuilder()
            .setColor('#FF69B4')
            // .setTitle("Regras Essenciais") // T√≠tulo opcional para o embed em si
            .addFields(
                {
                    name: "1. Respeito e Conduta Geral",
                    value: "1.1. **Respeito Acima de Tudo:** Trate todos os membros, moderadores e desenvolvedores com respeito. N√£o toleramos qualquer forma de ass√©dio, bullying, discurso de √≥dio (racismo, sexismo, homofobia, etc.), amea√ßas ou qualquer comportamento que crie um ambiente hostil.\n" +
                           "1.2. **Sem Conte√∫do Ofensivo ou NSFW:** √â estritamente proibido compartilhar conte√∫do pornogr√°fico, excessivamente violento, chocante, ou qualquer material que seja ilegal ou inapropriado para todas as idades (Not Safe For Work - NSFW).\n" +
                           "1.3. **Mantenha a Identidade Segura:** N√£o compartilhe informa√ß√µes pessoais suas ou de terceiros (doxxing). Evite se passar por outros membros, moderadores ou pelo Bot Samy.\n" +
                           "1.4. **Linguagem Apropriada:** Evite o uso excessivo de palavr√µes ou linguagem vulgar. Lembre-se que temos membros de diversas idades e sensibilidades."
                },
                { name: '\u200B', value: '---\n\n**2. Uso dos Canais e Intera√ß√£o**' }, // T√≠tulo da se√ß√£o dentro de um campo
                {
                    name: "Canais Corretos (2.1)", // Nome do campo mais curto
                    value: "Utilize os canais para seus devidos prop√≥sitos. Por exemplo:\n" +
                           "   ‚Ä¢ `#comandos-do-samy` (ou similar): Testar e usar comandos.\n" +
                           "   ‚Ä¢ `#suporte-geral`: D√∫vidas gerais.\n" +
                           "   ‚Ä¢ `#relatar-bugs`: Reportar falhas do Bot.\n" +
                           "   ‚Ä¢ `#sugestoes-para-o-samy`: Ideias para o Bot.\n" +
                           "   ‚Ä¢ `#chat-da-comunidade`: Conversas gerais (bom senso)."
                },
                {
                    name: "Restri√ß√µes de Intera√ß√£o (2.2 - 2.4)",
                    value: "2.2. **Sem Spam ou Flood:** N√£o envie mensagens repetidas, excesso de emojis/CAPS, ou \"flood\". Inclui spam de comandos.\n" +
                           "2.3. **Sem Auto-Promo√ß√£o Excessiva:** N√£o divulgue outros servidores, links de afiliados, canais, etc., sem permiss√£o pr√©via, especialmente fora de canais designados. Foco √© o Bot Samy.\n" +
                           "2.4. **Sem Men√ß√µes Desnecess√°rias:** Evite @pingar membros, cargos (especialmente `@everyone`/`@here`) ou equipe sem motivo importante."
                }
            );

        // Embed 2: Se√ß√µes 3, 4, 5 e 6
        const embed2 = new EmbedBuilder()
            .setColor('#FF69B4')
            // .setTitle("Regras Adicionais e Diretrizes")
            .addFields(
                { name: '\u200B', value: '---\n\n**3. Intera√ß√£o com o Bot Samy**' },
                {
                    name: "Uso do Bot (3.1 - 3.3)",
                    value: "3.1. **Uso Consciente:** Evite sobrecarregar o Bot com comandos repetitivos.\n" +
                           "3.2. **Canais de Comando:** Use canais designados para comandos.\n" +
                           "3.3. **N√£o Tente Burlar:** N√£o explore falhas ou use comandos maliciosamente. Reporte bugs em `#relatar-bugs`."
                },
                { name: '\u200B', value: '---\n\n**4. Suporte, Bugs e Sugest√µes**' },
                {
                    name: "Procedimentos (4.1 - 4.3)",
                    value: "4.1. **Detalhe seu Problema/Sugest√£o:** Seja claro e detalhado. Forne√ßa comando usado, o que esperava, o que aconteceu, e prints (se aplic√°vel).\n" +
                           "4.2. **Paci√™ncia com o Suporte:** A equipe e comunidade ajudar√£o o mais r√°pido poss√≠vel (suporte volunt√°rio).\n" +
                           "4.3. **Verifique Antes de Postar:** Use a busca para evitar duplicidade de bugs/sugest√µes."
                },
                { name: '\u200B', value: '---\n\n**5. Intera√ß√£o com a Equipe**' },
                {
                    name: "Comunica√ß√£o (5.1 - 5.2)",
                    value: "5.1. **Respeite as Decis√µes da Equipe:** Decis√µes da modera√ß√£o/administra√ß√£o visam o bem da comunidade. Queixas sobre modera√ß√£o, procure um admin em DM educadamente.\n" +
                           "5.2. **N√£o Envie DMs Desnecess√°rias √† Equipe:** Use canais p√∫blicos para suporte/d√∫vidas. DMs para equipe s√£o para quest√µes sens√≠veis ou quando instru√≠do."
                },
                { name: '\u200B', value: '---\n\n**6. Diretrizes do Discord**' },
                {
                    name: "Termos do Discord (6.1)",
                    value: "6.1. **Siga os Termos de Servi√ßo e Diretrizes da Comunidade do Discord:** Al√©m destas regras, todos devem aderir √†s pol√≠ticas do Discord. Viola√ß√µes graves podem ser reportadas ao Discord."
                }
            )
            .setTimestamp()
            .setFooter({ text: `Equipe de Modera√ß√£o Samy Bot | √öltima atualiza√ß√£o: ${new Date().toLocaleDateString('pt-BR')}` });


        try {
            await targetChannel.send({ embeds: [introEmbed] });
            await targetChannel.send({ embeds: [embed1] });
            await targetChannel.send({ embeds: [embed2] });

            if (message.channel.id !== targetChannel.id) {
                await message.reply({ content: `‚úÖ Regras enviadas com sucesso para o canal ${targetChannel.toString()}!` });
            } else {
                await message.react('üëç').catch(console.error);
            }

        } catch (error) {
            console.error("[PostRulesCmd] Erro ao enviar as regras:", error);
            message.reply({ content: "‚ùå Ocorreu um erro ao tentar postar as regras. Verifique minhas permiss√µes no canal de destino." });
        }
    }
};